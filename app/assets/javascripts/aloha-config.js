// Generated by CoffeeScript 1.7.1
(function() {
  this.Aloha = this.Aloha || {};

  this.Aloha.settings = {
    jQuery: this.jQuery,
    logLevels: {
      error: true,
      warn: true,
      info: false,
      debug: false
    },
    requireConfig: {
      paths: {
        jqueryui: '../../oerpub/js/jquery-ui-1.9.0.custom-aloha'
      },
      map: {
        '*': {
          'ui/ui': 'toolbar/toolbar-plugin'
        }
      }
    },
    errorhandling: true,
    plugins: {
      load: ['common/ui', 'oer/toolbar', 'common/format', 'common/block', 'common/list', 'common/contenthandler', 'oer/paste', 'oer/table', 'extra/draganddropfiles', 'oer/image', 'oer/figure', 'oer/overlay', 'oer/math', 'oer/assorted', 'oer/semanticblock', 'oer/note', 'oer/example', 'oer/exercise', 'oer/quotation', 'oer/equation', 'oer/definition', 'oer/multipart', 'oer/copy', 'oer/cleanup'],
      note: [
        {
          label: 'Note',
          typeClass: 'note',
          hasTitle: true
        }, {
          label: 'Aside',
          typeClass: 'note',
          hasTitle: true,
          type: 'aside'
        }, {
          label: 'Warning',
          typeClass: 'note',
          hasTitle: true,
          type: 'warning'
        }, {
          label: 'Tip',
          typeClass: 'note',
          hasTitle: true,
          type: 'tip'
        }, {
          label: 'Important',
          typeClass: 'note',
          hasTitle: true,
          type: 'important'
        }, {
          label: 'Noteish',
          typeClass: 'noteish',
          hasTitle: true
        }, {
          label: 'Noteish (no Title)',
          typeClass: 'noteish-notitle',
          hasTitle: false
        }
      ],
      draganddropfiles: {
        upload: {
          config: {
            method: 'POST',
            url: '/resource',
            fieldName: 'upload',
            send_multipart_form: true,
            callback: function(resp) {
              var $img;
              if (!(resp.match(/^http/) || resp.match(/^\//) || resp.match(/^[a-z]/))) {
                alert('You dropped a file and we sent a message to the server to do something with it.\nIt responded with some gibberish so we are showing you some other file to show it worked');
                resp = 'src/test/AlohaEditorLogo.png';
              }
              $img = Aloha.jQuery('.aloha-image-uploading').add('#' + this.id);
              $img.attr('src', resp);
              $img.removeClass('aloha-image-uploading');
              return console.log('Updated Image src as a result of upload');
            }
          }
        }
      },
      block: {
        defaults: {
          '.default-block': {},
          figure: {
            'aloha-block-type': 'EditableImageBlock'
          }
        }
      }
    }
  };

  return this.Aloha;

}).call(this);
